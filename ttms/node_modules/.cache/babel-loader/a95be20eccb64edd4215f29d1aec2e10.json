{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/DELL/Desktop/TTMS_web/ttms/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      ruleForm: {\n        username: '',\n        password: '',\n        phone_number: '',\n        email: ''\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 10,\n          message: '长度在 2 到 5 个字符',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 10,\n          message: '长度在 3 到 10 个字符',\n          trigger: 'blur'\n        }],\n        telephone: [{\n          require: false,\n          message: '请输入电话号码',\n          trigger: 'change'\n        } // { message: '长度为 11 个字符', trigger: 'change'  }\n        ],\n        email: [{\n          required: true,\n          message: '请输入邮箱地址',\n          trigger: 'blur'\n        }, {\n          type: 'email',\n          message: '请输入正确的邮箱地址',\n          trigger: ['blur', 'change']\n        }]\n      }\n    };\n  },\n  methods: {\n    SignIn: function SignIn() {\n      var _this = this;\n\n      this.$refs.ruleForm.validate( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(valid) {\n          var _yield$_this$$http$po, res;\n\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (valid) {\n                    _context.next = 2;\n                    break;\n                  }\n\n                  return _context.abrupt(\"return\");\n\n                case 2:\n                  _context.next = 4;\n                  return _this.$http.post('register', _this.ruleForm);\n\n                case 4:\n                  _yield$_this$$http$po = _context.sent;\n                  res = _yield$_this$$http$po.data;\n                  console.log(res.msg);\n\n                  if (!(res.code !== 1000)) {\n                    _context.next = 9;\n                    break;\n                  }\n\n                  return _context.abrupt(\"return\", _this.$message.error('注册失败'));\n\n                case 9:\n                  _this.$message.success('注册成功');\n\n                  _this.$router.push('/login');\n\n                case 11:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AAEA;EACAA,IADA,kBACA;IACA;MACAC;QACAC,YADA;QAEAC,YAFA;QAGAC,gBAHA;QAIAC;MAJA,CADA;MAOAC;QACAJ,WACA;UAAAK;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,CAFA,CADA;QAKAN,WACA;UAAAI;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,CAFA,CALA;QASAG,YACA;UAAAC;UAAAL;UAAAC;QAAA,CADA,CAEA;QAFA,CATA;QAaAJ,QACA;UAAAE;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAK;UAAAN;UAAAC;QAAA,CAFA;MAbA;IAPA;EA0BA,CA5BA;EA6BAM;IACAC,MADA,oBACA;MAAA;;MACA;QAAA;UAAA;;UAAA;YAAA;cAAA;gBAAA;kBAAA,IACAC,KADA;oBAAA;oBAAA;kBAAA;;kBAAA;;gBAAA;kBAAA;kBAAA,OAYA,4CAZA;;gBAAA;kBAAA;kBAYAC,GAZA,yBAYAlB,IAZA;kBAaAmB;;kBAbA,MAcAD,iBAdA;oBAAA;oBAAA;kBAAA;;kBAAA,iCAcA,4BAdA;;gBAAA;kBAeA;;kBACA;;gBAhBA;gBAAA;kBAAA;cAAA;YAAA;UAAA;QAAA;;QAAA;UAAA;QAAA;MAAA;IAkBA;EApBA;AA7BA","names":["data","ruleForm","username","password","phone_number","email","rules","required","message","trigger","min","max","telephone","require","type","methods","SignIn","valid","res","console"],"sourceRoot":"src/views","sources":["SignIn.vue"],"sourcesContent":["<template>\r\n    <section>\r\n        <!-- 背景颜色 -->\r\n        <div class=\"color\"></div>\r\n        <div class=\"color\"></div>\r\n        <div class=\"color\"></div>\r\n        <div class=\"box\">\r\n            <!-- 背景圆 -->\r\n            <div class=\"circle\" style=\"--x:0\"></div>\r\n            <div class=\"circle\" style=\"--x:1\"></div>\r\n            <div class=\"circle\" style=\"--x:2\"></div>\r\n            <div class=\"circle\" style=\"--x:3\"></div>\r\n            <div class=\"circle\" style=\"--x:4\"></div>\r\n            <div class=\"container\">\r\n                <div class=\"form\">\r\n                    <h2>注册</h2>\r\n                    <!-- 注册表单区 -->\r\n                    <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\r\n                        <el-form-item label=\"用户名\" prop=\"username\">\r\n                            <el-input v-model=\"ruleForm.username\"></el-input>\r\n                        </el-form-item>\r\n                        <el-form-item label=\"密码\" prop=\"password\">\r\n                            <el-input v-model=\"ruleForm.password\"></el-input>\r\n                        </el-form-item>\r\n                        <el-form-item label=\"电话\" prop=\"telephone\">\r\n                            <el-input v-model=\"ruleForm.phone_number\"></el-input>\r\n                        </el-form-item>\r\n                        <el-form-item label=\"邮箱\" prop=\"email\">\r\n                            <el-input v-model=\"ruleForm.email\"></el-input>\r\n                        </el-form-item>\r\n                        <el-form-item>\r\n                            <el-button round @click=\"SignIn\">注册</el-button>\r\n                        </el-form-item>\r\n                    </el-form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            ruleForm: {\r\n                username: '',\r\n                password: '',\r\n                phone_number: '',\r\n                email: ''\r\n            },\r\n            rules: {\r\n                username: [\r\n                    { required: true, message: '请输入用户名', trigger: 'blur' },\r\n                    { min: 2, max: 10, message: '长度在 2 到 5 个字符', trigger: 'blur' }\r\n                ],\r\n                password: [\r\n                    { required: true, message: '请输入密码', trigger: 'blur' },\r\n                    { min: 3, max: 10, message: '长度在 3 到 10 个字符', trigger: 'blur' }\r\n                ],\r\n                telephone: [\r\n                    { require: false, message: '请输入电话号码', trigger: 'change' },\r\n                    // { message: '长度为 11 个字符', trigger: 'change'  }\r\n                ],\r\n                email: [\r\n                    { required: true, message: '请输入邮箱地址', trigger: 'blur' },\r\n                    { type: 'email', message: '请输入正确的邮箱地址', trigger: ['blur', 'change'] }\r\n                ]\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n         SignIn() {\r\n             this.$refs.ruleForm.validate(async valid => {\r\n                if (!valid)  return;\r\n                // const { data: res } = await axios({\r\n                //         method: 'POST',\r\n                //         url: 'http://127.0.0.1:8080/api/register',\r\n                //         data: {\r\n                //             username: this.username,\r\n                //             password: this.password,\r\n                //             phone_number: this.telephone,\r\n                //             email: this.email\r\n                //         }\r\n                //     })\r\n                const { data: res } = await this.$http.post('register', this.ruleForm);\r\n                console.log(res.msg);\r\n                if (res.code !== 1000) return this.$message.error('注册失败');\r\n                this.$message.success('注册成功');\r\n                this.$router.push('/login');\r\n            });\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n/* 清除浏览器默认边距，\r\n使边框和内边距的值包含在元素的width和height内 */\r\n\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n}\r\n\r\n/* 使用flex布局，让内容垂直和水平居中 */\r\n\r\nsection {\r\n    /* 相对定位 */\r\n    position: relative;\r\n    overflow: hidden;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 100vh;\r\n    /* linear-gradient() 函数用于创建一个表示两种或多种颜色线性渐变的图片 */\r\n    background: linear-gradient(to bottom, #f1f4f9, #dff1ff);\r\n}\r\n\r\n/* 背景颜色 */\r\n\r\nsection .color {\r\n    /* 绝对定位 */\r\n    position: absolute;\r\n    /* 使用filter(滤镜) 属性，给图像设置高斯模糊*/\r\n    filter: blur(200px);\r\n}\r\n\r\n/* :nth-child(n) 选择器匹配父元素中的第 n 个子元素 */\r\n\r\nsection .color:nth-child(1) {\r\n    top: -350px;\r\n    width: 600px;\r\n    height: 600px;\r\n    background: #ff359b;\r\n}\r\n\r\nsection .color:nth-child(2) {\r\n    bottom: -150px;\r\n    left: 100px;\r\n    width: 500px;\r\n    height: 500px;\r\n    background: #fffd87;\r\n}\r\n\r\nsection .color:nth-child(3) {\r\n    bottom: 50px;\r\n    right: 100px;\r\n    width: 500px;\r\n    height: 500px;\r\n    background: #00d2ff;\r\n}\r\n\r\n.box {\r\n    position: relative;\r\n}\r\n\r\n/* 背景圆样式 */\r\n\r\n.box .circle {\r\n    position: absolute;\r\n    background: rgba(255, 255, 255, 0.1);\r\n    /* backdrop-filter属性为一个元素后面区域添加模糊效果 */\r\n    backdrop-filter: blur(5px);\r\n    box-shadow: 0 25px 45px rgba(0, 0, 0, 0.1);\r\n    border: 1px solid rgba(255, 255, 255, 0.5);\r\n    border-right: 1px solid rgba(255, 255, 255, 0.2);\r\n    border-bottom: 1px solid rgba(255, 255, 255, 0.2);\r\n    border-radius: 50%;\r\n    /* 使用filter(滤镜) 属性，改变颜色。\r\n    hue-rotate(deg)  给图像应用色相旋转 \r\n    calc() 函数用于动态计算长度值 \r\n    var() 函数调用自定义的CSS属性值x*/\r\n    filter: hue-rotate(calc(var(--x) * 70deg));\r\n    /* 调用动画animate，需要10s完成动画，\r\n    linear表示动画从头到尾的速度是相同的，\r\n    infinite指定动画应该循环播放无限次*/\r\n    animation: animate 10s linear infinite;\r\n    /* 动态计算动画延迟几秒播放 */\r\n    animation-delay: calc(var(--x) * -1s);\r\n}\r\n\r\n/* 背景圆动画 */\r\n\r\n@keyframes animate {\r\n\r\n    0%,\r\n    100%,\r\n        {\r\n        transform: translate(-50px);\r\n    }\r\n\r\n    50% {\r\n        transform: translateY(50px);\r\n    }\r\n\r\n}\r\n\r\n.box .circle:nth-child(1) {\r\n    top: -50px;\r\n    right: -60px;\r\n    width: 100px;\r\n    height: 100px;\r\n}\r\n\r\n.box .circle:nth-child(2) {\r\n    top: 150px;\r\n    left: -100px;\r\n    width: 120px;\r\n    height: 120px;\r\n    z-index: 2;\r\n}\r\n\r\n.box .circle:nth-child(3) {\r\n    bottom: 50px;\r\n    right: -60px;\r\n    width: 80px;\r\n    height: 80px;\r\n    z-index: 2;\r\n}\r\n\r\n.box .circle:nth-child(4) {\r\n    bottom: -80px;\r\n    left: 100px;\r\n    width: 60px;\r\n    height: 60px;\r\n}\r\n\r\n.box .circle:nth-child(5) {\r\n    top: -80px;\r\n    left: 140px;\r\n    width: 60px;\r\n    height: 60px;\r\n}\r\n\r\n/* 登录框样式 */\r\n\r\n.container {\r\n    position: relative;\r\n    width: 400px;\r\n    min-height: 400px;\r\n    background: rgba(255, 255, 255, 0.1);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    backdrop-filter: blur(5px);\r\n    box-shadow: 0 25px 45px rgba(0, 0, 0, 0.1);\r\n    border: 1px solid rgba(255, 255, 255, 0.5);\r\n    border-right: 1px solid rgba(255, 255, 255, 0.2);\r\n    border-bottom: 1px solid rgba(255, 255, 255, 0.2);\r\n}\r\n\r\n.form h2 {\r\n    position: relative;\r\n    color: #fff;\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    letter-spacing: 5px;\r\n    margin-bottom: 30px;\r\n    cursor: pointer;\r\n}\r\n\r\n.form h2::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: -10px;\r\n    width: 0px;\r\n    height: 3px;\r\n    background: #fff;\r\n    transition: 0.5s;\r\n}\r\n\r\n.form h2:hover:before {\r\n    width: 53px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}