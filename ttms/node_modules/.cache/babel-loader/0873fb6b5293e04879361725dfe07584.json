{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/DELL/Desktop/TTMS_web/ttms/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.error.cause.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    //验证邮箱的规则\n    var checkEmail = function checkEmail(rule, value, cb) {\n      //验证邮箱的正则表达式 \n      var regEmail = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(\\.[a-zA-Z0-9_-])+/;\n\n      if (regEmail.test(value)) {\n        //合法邮箱\n        return cb();\n      }\n\n      cb(new Error('请输入合法的邮箱'));\n    }; //验证手机号的规则\n\n\n    var checkMobile = function checkMobile(rule, value, cb) {\n      //验证手机号的正则表达式\n      var regMobile = /^((13[0-9])|(17[0-1,6-8])|(15[^4,\\\\D])|(18[0-9]))\\d{8}$/;\n\n      if (regMobile.test(value)) {\n        //合法手机号\n        return cb();\n      }\n\n      cb(new Error('请输入合法的手机号'));\n    };\n\n    return {\n      queryInfo: {\n        key_word: '',\n        //当前的页数\n        page_num: 1,\n        //当前每页有多少条数据\n        page_size: 2\n      },\n      userlist: [],\n      total: '',\n      //控制添加用户对话框的显示与隐藏\n      addDialogVisible: false,\n      //添加用户的表单数据\n      addForm: {\n        username: '',\n        password: '',\n        email: '',\n        phone_number: ''\n      },\n      //添加表单的验证规则对象\n      addFormRules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 10,\n          message: '用户名的长度在3到10之间',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 15,\n          message: '密码的长度在6到15之间',\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          message: '请输入邮箱',\n          trigger: 'blur'\n        }, {\n          validator: checkEmail,\n          trigger: 'blur'\n        }],\n        phone_number: [{\n          required: true,\n          message: '请输入手机号码',\n          trigger: 'blur'\n        }, {\n          validator: checkMobile,\n          trigger: 'blur'\n        }]\n      },\n      // 控制修改用户对话框的显示与隐藏\n      editDialogVisible: false,\n      // 查询到的用户信息对象\n      editForm: {},\n      //修改表单的验证规则\n      editFormRules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 10,\n          message: '用户名的长度在3到10之间',\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          message: '请输入用户的邮箱',\n          trigger: 'blur'\n        }, {\n          validator: checkEmail,\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 15,\n          message: '密码的长度在6到15之间',\n          trigger: 'blur'\n        }],\n        phone_number: [{\n          required: true,\n          message: '请输入用户的手机号码',\n          trigger: 'blur'\n        }, {\n          validator: checkMobile,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created: function created() {\n    this.getUserList();\n  },\n  methods: {\n    getUserList: function getUserList() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _yield$_this$$http$ge, res;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.$http.get('getallmsg', {\n                  params: _this.queryInfo\n                });\n\n              case 2:\n                _yield$_this$$http$ge = _context.sent;\n                res = _yield$_this$$http$ge.data;\n\n                if (!(res.code != 1000)) {\n                  _context.next = 7;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", _this.$message.error('获取用户列表失败！'));\n\n              case 7:\n                _this.userlist = res.data.list;\n                _this.total = res.data.Total; //console.log(res)\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    // 监听pagesize\n    handleSizeChange: function handleSizeChange(newSize) {\n      // console.log(newSize)\n      this.queryInfo.page_size = newSize;\n      this.getUserList();\n    },\n    //监听页码值改变的事件\n    handleCurrentChange: function handleCurrentChange(newPage) {\n      // console.log(newPage)\n      this.queryInfo.page_num = newPage;\n      this.getUserList();\n    },\n    //监听switch开关状态的改变\n    userStateChanged: function userStateChanged(id) {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _yield$_this2$$http$g, res;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _this2.$http.get('getusermsgbyid/' + id);\n\n              case 2:\n                _yield$_this2$$http$g = _context2.sent;\n                res = _yield$_this2$$http$g.data;\n\n                if (!(res.code !== 1000)) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", _this2.$message.error(\"更新用户信息失败！\"));\n\n              case 6:\n                if (res.is_login === 1) {\n                  res.is_login = -1;\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    //监听添加用户对话框的关闭事件\n    addDialogClosed: function addDialogClosed() {\n      this.$refs.addFormRef.resetFields();\n    },\n    //点击按钮，添加新用户\n    addUser: function addUser() {\n      var _this3 = this;\n\n      this.$refs.addFormRef.validate( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(valid) {\n          var _yield$_this3$$http$p, res;\n\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  if (valid) {\n                    _context3.next = 2;\n                    break;\n                  }\n\n                  return _context3.abrupt(\"return\");\n\n                case 2:\n                  _context3.next = 4;\n                  return _this3.$http.post('users', _this3.addForm);\n\n                case 4:\n                  _yield$_this3$$http$p = _context3.sent;\n                  res = _yield$_this3$$http$p.data;\n\n                  if (res.code !== 1000) {\n                    _this3.$message.error('添加用户失败！');\n                  }\n\n                  _this3.$message.success('添加用户成功！');\n\n                  _this3.addDialogVisible = false;\n\n                  _this3.getUserList();\n\n                case 10:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    },\n    //展示编辑的对话框\n    showEditDialog: function showEditDialog(id) {\n      var _this4 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var _yield$_this4$$http$g, res;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return _this4.$http.get('getusermsgbyid/' + id);\n\n              case 2:\n                _yield$_this4$$http$g = _context4.sent;\n                res = _yield$_this4$$http$g.data;\n\n                if (!(res.code !== 1000)) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", _this4.$message.error('查询用户信息失败！'));\n\n              case 6:\n                _this4.editForm = res.data;\n                console.log(_this4.editForm);\n                _this4.editDialogVisible = true;\n\n              case 9:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    },\n    //监听修改用户对话框的关闭事件\n    editDialogClosed: function editDialogClosed() {\n      this.refs.editFormRef.resetFields();\n    },\n    //修改用户表单的预验证\n    editUserInfo: function editUserInfo() {\n      var _this5 = this;\n\n      this.$refs.editFormRef.validate( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(vaild) {\n          var _yield$_this5$$http$p, res;\n\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  if (vaild) {\n                    _context5.next = 2;\n                    break;\n                  }\n\n                  return _context5.abrupt(\"return\");\n\n                case 2:\n                  _context5.next = 4;\n                  return _this5.$http.put('updatemsg/' + _this5.editForm.id, {\n                    username: _this5.editForm.username,\n                    password: _this5.editForm.password,\n                    email: _this5.editForm.email,\n                    phone_number: _this5.editForm.phone_number,\n                    identity: _this5.editForm.identity\n                  });\n\n                case 4:\n                  _yield$_this5$$http$p = _context5.sent;\n                  res = _yield$_this5$$http$p.data;\n\n                  if (!(res.code !== 1000)) {\n                    _context5.next = 8;\n                    break;\n                  }\n\n                  return _context5.abrupt(\"return\", _this5.$message.error('更新用户信息失败！'));\n\n                case 8:\n                  //关闭对话框\n                  _this5.editDialogVisible = false; //刷新数据列表\n\n                  _this5.getUserList(); //提示修改成功\n\n\n                  _this5.$message.success('更新用户信息成功！');\n\n                case 11:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    },\n    //根据ID删除用户信息\n    removeUserById: function removeUserById(id) {\n      var _this6 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n        var confirmResult, _yield$_this6$$http$d, res;\n\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return _this6.$confirm('此操作将永久删除该用户, 是否继续?', '提示', {\n                  confirmButtonText: '确定',\n                  cancelButtonText: '取消',\n                  type: 'warning'\n                }).catch(function (err) {\n                  return err;\n                });\n\n              case 2:\n                confirmResult = _context6.sent;\n\n                if (!(confirmResult !== 'confirm')) {\n                  _context6.next = 5;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", _this6.$message.info('已取消删除'));\n\n              case 5:\n                _context6.next = 7;\n                return _this6.$http.delete('updatemsg/' + id);\n\n              case 7:\n                _yield$_this6$$http$d = _context6.sent;\n                res = _yield$_this6$$http$d.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context6.next = 11;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", _this6.$message.error('删除用户失败！'));\n\n              case 11:\n                _this6.$message.success('删除用户成功！');\n\n                _this6.getUserList();\n\n              case 13:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["data","cb","queryInfo","key_word","page_num","page_size","userlist","total","addDialogVisible","addForm","username","password","email","phone_number","addFormRules","required","message","trigger","min","max","validator","editDialogVisible","editForm","editFormRules","created","methods","getUserList","params","res","handleSizeChange","newSize","handleCurrentChange","newPage","userStateChanged","id","addDialogClosed","addUser","valid","showEditDialog","console","editDialogClosed","editUserInfo","vaild","identity","removeUserById","confirmButtonText","cancelButtonText","type","catch","confirmResult"],"sourceRoot":"src/views","sources":["MangerUser.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <!--面包屑导航区-->\r\n        <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n            <el-breadcrumb-item :to=\"{ path: '/' }\">首页</el-breadcrumb-item>\r\n            <el-breadcrumb-item>用户管理</el-breadcrumb-item>\r\n            <el-breadcrumb-item>用户列表</el-breadcrumb-item>\r\n        </el-breadcrumb>\r\n        <!--卡片视图-->\r\n        <el-card>\r\n            <!-- 搜索与添加区 -->\r\n            <el-row :gutter=\"20\">\r\n                <el-col :span=\"8\">\r\n                    <el-input placeholder=\"请输入内容\" v-model=\"queryInfo.key_word\" clearable @clear=\"getUserList\">\r\n                        <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"getUserList\"></el-button>\r\n                    </el-input>\r\n                </el-col>\r\n                <el-col :span=\"4\">\r\n                    <el-button type=\"primary\" @click=\"addDialogVisible = true\">添加用户</el-button>\r\n                </el-col>\r\n            </el-row>\r\n\r\n            <!-- 用户列表区 -->\r\n            <el-table :data=\"userlist\" :border='true' :stripe='true'>\r\n                <el-table-column type=\"index\"></el-table-column>\r\n                <el-table-column label=\"姓名\" prop=\"username\"></el-table-column>\r\n                <el-table-column label=\"密码\" prop=\"password\"></el-table-column>\r\n                <el-table-column label=\"邮箱\" prop=\"email\"></el-table-column>\r\n                <el-table-column label=\"电话\" prop=\"phone_number\"></el-table-column>\r\n                <el-table-column label=\"角色\" prop=\"identity\"></el-table-column>\r\n                <el-table-column label=\"状态\">\r\n                    <template slot-scope=\"scope\">\r\n                        <el-switch v-model=\"scope.row.is_login\" @change=\"userStateChanged(scope.row.id)\" ></el-switch>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column label=\"操作\" width=\"180px\">\r\n                    <template slot-scope=\"scope\">\r\n                        <!-- 修改按钮 -->\r\n                        <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" @click=\"showEditDialog(scope.row.id)\">\r\n                        </el-button>\r\n                        <!-- 删除按钮 -->\r\n                        <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\"\r\n                            @click=\"removeUserById(scope.row.id)\"></el-button>\r\n                        <!-- 分配角色按钮 -->\r\n                        <el-tooltip effect=\"dark\" content=\"分配角色\" placement=\"top\" :enterable=\"false\">\r\n                            <el-button type=\"warning\" icon=\"el-icon-setting\" size=\"mini\"></el-button>\r\n                        </el-tooltip>\r\n\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n\r\n            <!-- 分页区域 -->\r\n            <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\"\r\n                :current-page=\"queryInfo.pagenum\" :page-sizes=\"[1, 2, 5, 10]\" :page-size=\"queryInfo.pagesize\"\r\n                layout=\"total,sizes, prev, pager, next, jumper\" :total=\"total\">\r\n            </el-pagination>\r\n        </el-card>\r\n\r\n        <!-- 添加用户的对话框 -->\r\n        <el-dialog title=\"添加用户\" :visible.sync=\"addDialogVisible\" width=\"50%\" @close=\"addDialogClosed\">\r\n            <!--内容主题区-->\r\n            <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"70px\">\r\n                <el-form-item label=\"用户名\" prop=\"username\">\r\n                    <el-input v-model=\"addForm.username\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"密码\" prop=\"password\">\r\n                    <el-input v-model=\"addForm.password\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"邮箱\" prop=\"email\">\r\n                    <el-input v-model=\"addForm.email\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"手机号\" prop=\"phone_number\">\r\n                    <el-input v-model=\"addForm.phone_number\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <!--底部区域-->\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"addDialogVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"addUser\">确 定</el-button>\r\n            </span>\r\n        </el-dialog>\r\n\r\n        <!-- 修改用户的对话框 -->\r\n        <el-dialog title=\"修改用户\" :visible.sync=\"editDialogVisible\" width=\"50%\" @close=\"editDialogClosed\">\r\n\r\n            <el-form :model=\"editForm\" :rules=\"editFormRules\" ref=\"editFormRef\" label-width=\"70px\">\r\n                <el-form-item label=\"ID\">\r\n                    <el-input v-model=\"editForm.id\" :disabled=\"true\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"用户名\" prop=\"username\">\r\n                    <el-input v-model=\"editForm.username\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"密码\" prop=\"password\">\r\n                    <el-input v-model=\"editForm.password\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"邮箱\" prop=\"email\">\r\n                    <el-input v-model=\"editForm.email\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"手机号\" prop=\"phone_number\">\r\n                    <el-input v-model=\"editForm.phone_number\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"角色\" prop=\"identity\">\r\n                    <el-input v-model=\"editForm.identity\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"editDialogVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"editUserInfo\">确 定</el-button>\r\n            </span>\r\n        </el-dialog>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        //验证邮箱的规则\r\n        var checkEmail = (rule, value, cb) => {\r\n            //验证邮箱的正则表达式 \r\n            const regEmail = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(\\.[a-zA-Z0-9_-])+/\r\n            if (regEmail.test(value)) {\r\n                //合法邮箱\r\n                return cb()\r\n            }\r\n\r\n            cb(new Error('请输入合法的邮箱'))\r\n\r\n        }\r\n\r\n        //验证手机号的规则\r\n        var checkMobile = (rule, value, cb) => {\r\n            //验证手机号的正则表达式\r\n            const regMobile = /^((13[0-9])|(17[0-1,6-8])|(15[^4,\\\\D])|(18[0-9]))\\d{8}$/\r\n            if (regMobile.test(value)) {\r\n                //合法手机号\r\n                return cb()\r\n            }\r\n\r\n            cb(new Error('请输入合法的手机号'))\r\n        }\r\n\r\n        return {\r\n            queryInfo: {\r\n                key_word: '',\r\n                //当前的页数\r\n                page_num: 1,\r\n                //当前每页有多少条数据\r\n                page_size: 2\r\n            },\r\n            userlist: [],\r\n            total: '',\r\n            //控制添加用户对话框的显示与隐藏\r\n            addDialogVisible: false,\r\n            //添加用户的表单数据\r\n            addForm: {\r\n                username: '',\r\n                password: '',\r\n                email: '',\r\n                phone_number: ''\r\n            },\r\n            //添加表单的验证规则对象\r\n            addFormRules: {\r\n                username: [\r\n                    { required: true, message: '请输入用户名', trigger: 'blur' },\r\n                    { min: 3, max: 10, message: '用户名的长度在3到10之间', trigger: 'blur' }\r\n                ],\r\n\r\n                password: [\r\n                    { required: true, message: '请输入密码', trigger: 'blur' },\r\n                    { min: 6, max: 15, message: '密码的长度在6到15之间', trigger: 'blur' }\r\n                ],\r\n\r\n                email: [\r\n                    { required: true, message: '请输入邮箱', trigger: 'blur' },\r\n                    { validator: checkEmail, trigger: 'blur' }\r\n                ],\r\n\r\n                phone_number: [\r\n                    { required: true, message: '请输入手机号码', trigger: 'blur' },\r\n                    { validator: checkMobile, trigger: 'blur' }\r\n                ]\r\n\r\n            },\r\n\r\n            // 控制修改用户对话框的显示与隐藏\r\n            editDialogVisible: false,\r\n            // 查询到的用户信息对象\r\n            editForm: {},\r\n            //修改表单的验证规则\r\n            editFormRules: {\r\n                username: [\r\n                    { required: true, message: '请输入用户名', trigger: 'blur' },\r\n                    { min: 3, max: 10, message: '用户名的长度在3到10之间', trigger: 'blur' }\r\n                ],\r\n                email: [\r\n                    { required: true, message: '请输入用户的邮箱', trigger: 'blur' },\r\n                    { validator: checkEmail, trigger: 'blur' }\r\n                ],\r\n                password: [\r\n                    { required: true, message: '请输入密码', trigger: 'blur' },\r\n                    { min: 6, max: 15, message: '密码的长度在6到15之间', trigger: 'blur' }\r\n                ],\r\n\r\n                phone_number: [\r\n                    { required: true, message: '请输入用户的手机号码', trigger: 'blur' },\r\n                    { validator: checkMobile, trigger: 'blur' }\r\n                ]\r\n\r\n\r\n            },\r\n            \r\n\r\n\r\n\r\n        }\r\n    },\r\n    created() {\r\n        this.getUserList()\r\n    },\r\n    methods: {\r\n        async getUserList() {\r\n            const { data: res } = await this.$http.get('getallmsg', {\r\n                params: this.queryInfo\r\n            })\r\n            if (res.code != 1000) {\r\n                return this.$message.error('获取用户列表失败！'); ``\r\n\r\n            }\r\n            this.userlist = res.data.list\r\n\r\n            this.total = res.data.Total\r\n            //console.log(res)\r\n        },\r\n        // 监听pagesize\r\n        handleSizeChange(newSize) {\r\n\r\n            // console.log(newSize)\r\n            this.queryInfo.page_size = newSize\r\n            this.getUserList()\r\n        },\r\n        //监听页码值改变的事件\r\n        handleCurrentChange(newPage) {\r\n            // console.log(newPage)\r\n            this.queryInfo.page_num = newPage\r\n            this.getUserList()\r\n\r\n        },\r\n        //监听switch开关状态的改变\r\n        async userStateChanged(id) {\r\n            const{data: res} = await this.$http.get('getusermsgbyid/' + id)\r\n\r\n            if(res.code !== 1000){\r\n                return this.$message.error(\"更新用户信息失败！\")\r\n            }\r\n            \r\n            if(res.is_login === 1){\r\n\r\n                res.is_login = -1\r\n            }\r\n            \r\n            \r\n\r\n        },\r\n\r\n        //监听添加用户对话框的关闭事件\r\n        addDialogClosed() {\r\n            this.$refs.addFormRef.resetFields()\r\n\r\n        },\r\n\r\n        //点击按钮，添加新用户\r\n        addUser() {\r\n            this.$refs.addFormRef.validate(async valid => {\r\n                // console.log(valid)\r\n                if (!valid) return\r\n                //可以发起添加用户的网络请求\r\n                const { data: res } = await this.$http.post('users', this.addForm)\r\n\r\n                if (res.code !== 1000) {\r\n                    this.$message.error('添加用户失败！')\r\n                }\r\n\r\n                this.$message.success('添加用户成功！')\r\n                this.addDialogVisible = false\r\n                this.getUserList()\r\n            })\r\n        },\r\n\r\n        //展示编辑的对话框\r\n        async showEditDialog(id) {\r\n            // console.log(id);\r\n            const { data: res } = await this.$http.get('getusermsgbyid/' + id)\r\n\r\n            if (res.code !== 1000) {\r\n                return this.$message.error('查询用户信息失败！')\r\n            }\r\n\r\n            this.editForm = res.data\r\n            console.log(this.editForm);\r\n            this.editDialogVisible = true\r\n\r\n        },\r\n\r\n        //监听修改用户对话框的关闭事件\r\n        editDialogClosed() {\r\n            this.refs.editFormRef.resetFields()\r\n\r\n        },\r\n        //修改用户表单的预验证\r\n        editUserInfo() {\r\n            this.$refs.editFormRef.validate(async vaild => {\r\n\r\n                if (!vaild) return\r\n                //发起修改用户信息的数据请求\r\n                const { data: res } = await this.$http.put('updatemsg/' +\r\n                    this.editForm.id, {\r\n                    username: this.editForm.username,\r\n                    password: this.editForm.password,\r\n                    email: this.editForm.email,\r\n                    phone_number: this.editForm.phone_number,\r\n                    identity: this.editForm.identity\r\n\r\n                })\r\n                if (res.code !== 1000) {\r\n                    return this.$message.error('更新用户信息失败！');\r\n                }\r\n\r\n                //关闭对话框\r\n                this.editDialogVisible = false\r\n                //刷新数据列表\r\n                this.getUserList()\r\n                //提示修改成功\r\n                this.$message.success('更新用户信息成功！')\r\n\r\n            })\r\n\r\n        },\r\n\r\n        //根据ID删除用户信息\r\n        async removeUserById(id) {\r\n            //弹框询问用户是否删除数据\r\n            const confirmResult = await this.$confirm('此操作将永久删除该用户, 是否继续?', '提示', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                type: 'warning'\r\n            }).catch(err => err)\r\n\r\n\r\n            //如果用户确认删除，则返回为字符串confirm\r\n            //如果用户取消了删除，则返回为字符串cancel\r\n            // console.log(confirmResult);\r\n            if (confirmResult !== 'confirm') {\r\n                return this.$message.info('已取消删除')\r\n            }\r\n\r\n            const { data: res } = await this.$http.delete('updatemsg/' + id)\r\n\r\n            if (res.meta.status !== 200) {\r\n                return this.$message.error('删除用户失败！')\r\n            }\r\n\r\n            this.$message.success('删除用户成功！')\r\n            this.getUserList()\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.el-card {\r\n    margin-top: 5px;\r\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.15) !important;\r\n}\r\n\r\n.e-table {\r\n\r\n    margin-top: 12px;\r\n    font-size: 15px;\r\n\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}