{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/DELL/Desktop/TTMS_web/ttms/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.concat.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    //验证邮箱的规则\n    var checkEmail = function checkEmail(rule, value, cb) {\n      //验证邮箱的正则表达式 \n      var regEmail = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(\\.[a-zA-Z0-9_-])+/;\n\n      if (regEmail.test(value)) {\n        //合法邮箱\n        return cb();\n      }\n\n      cb(new Error('请输入合法的邮箱'));\n    }; //验证手机号的规则\n\n\n    var checkMobile = function checkMobile(rule, value, cb) {\n      //验证手机号的正则表达式\n      var regMobile = /^((13[0-9])|(17[0-1,6-8])|(15[^4,\\\\D])|(18[0-9]))\\d{8}$/;\n\n      if (regMobile.test(value)) {\n        //合法手机号\n        return cb();\n      }\n\n      cb(new Error('请输入合法的手机号'));\n    };\n\n    return {\n      queryInfo: {\n        query: '',\n        //当前的页数\n        pagenum: 1,\n        //当前每页有多少条数据\n        pagesize: 2\n      },\n      userlist: [],\n      total: '',\n      //控制添加用户对话框的显示与隐藏\n      addDialogVisible: false,\n      //添加用户的表单数据\n      addForm: {\n        username: '',\n        password: '',\n        email: ''\n      },\n      //添加表单的验证规则对象\n      addFormRules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 10,\n          message: '用户名的长度在3到10之间',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 15,\n          message: '密码的长度在6到15之间',\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          message: '请输入邮箱',\n          trigger: 'blur'\n        }, {\n          validator: checkEmail,\n          trigger: 'blur'\n        }],\n        mobile: [{\n          required: true,\n          message: '请输入手机号码',\n          trigger: 'blur'\n        }, {\n          validator: checkMobile,\n          trigger: 'blur'\n        }]\n      },\n      // 控制修改用户对话框的显示与隐藏\n      editDialogVisible: false,\n      // 查询到的用户信息对象\n      editForm: {},\n      //修改表单的验证规则\n      editFormRules: {\n        email: [{\n          required: true,\n          message: '请输入用户的邮箱',\n          trigger: 'blur'\n        }, {\n          validator: checkEmail,\n          trigger: 'blur'\n        }],\n        mobile: [{\n          required: true,\n          message: '请输入用户的手机号码',\n          trigger: 'blur'\n        }, {\n          validator: checkMobile,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created: function created() {\n    this.getUserList();\n  },\n  methods: {\n    getUserList: function getUserList() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _yield$_this$$http$ge, res;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.$http.get('getallmsg', {\n                  params: _this.queryInfo\n                });\n\n              case 2:\n                _yield$_this$$http$ge = _context.sent;\n                res = _yield$_this$$http$ge.data;\n\n                if (!(res.code != 1000)) {\n                  _context.next = 7;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", _this.$message.error('获取用户列表失败！'));\n\n              case 7:\n                _this.userlist = res.data.list; // this.total = res.data.total\n\n                console.log(res);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    // 监听pagesize\n    handleSizeChange: function handleSizeChange(newSize) {\n      // console.log(newSize)\n      this.queryInfo.pagesize = newSize;\n      this.getUserList();\n    },\n    //监听页码值改变的事件\n    handleCurrentChange: function handleCurrentChange(newPage) {\n      // console.log(newPage)\n      this.queryInfo.pagenum = newPage;\n      this.getUserList();\n    },\n    //监听switch开关状态的改变\n    userStateChanged: function userStateChanged(userinfo) {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _yield$_this2$$http$p, res;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                console.log(userinfo);\n                _context2.next = 3;\n                return _this2.$http.put(\"users/\".concat(userinfo.id, \"/state/\").concat(userinfo.mg_state));\n\n              case 3:\n                _yield$_this2$$http$p = _context2.sent;\n                res = _yield$_this2$$http$p.data;\n\n                if (!(res.code !== 1000)) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                userinfo.mg_state = !userinfo.mg_state;\n                return _context2.abrupt(\"return\", _this2.$message.error(\"更新用户状态失败！\"));\n\n              case 8:\n                return _context2.abrupt(\"return\", _this2.$message.success(\"更新用户状态成功！\"));\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    //监听添加用户对话框的关闭事件\n    addDialogClosed: function addDialogClosed() {\n      this.$refs.addFormRef.resetFields();\n    },\n    //点击按钮，添加新用户\n    addUser: function addUser() {\n      var _this3 = this;\n\n      this.$refs.addFormRef.validate( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(valid) {\n          var _yield$_this3$$http$p, res;\n\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  if (valid) {\n                    _context3.next = 2;\n                    break;\n                  }\n\n                  return _context3.abrupt(\"return\");\n\n                case 2:\n                  _context3.next = 4;\n                  return _this3.$http.post('users', _this3.addForm);\n\n                case 4:\n                  _yield$_this3$$http$p = _context3.sent;\n                  res = _yield$_this3$$http$p.data;\n\n                  if (res.code !== 1000) {\n                    _this3.$message.error('添加用户失败！');\n                  }\n\n                  _this3.$message.success('添加用户成功！');\n\n                  _this3.addDialogVisible = false;\n\n                  _this3.getUserList();\n\n                case 10:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    },\n    //展示编辑的对话框\n    showEditDialog: function showEditDialog(id) {\n      var _this4 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var _yield$_this4$$http$g, res;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return _this4.$http.get('users/' + id);\n\n              case 2:\n                _yield$_this4$$http$g = _context4.sent;\n                res = _yield$_this4$$http$g.data;\n\n                if (!(res.code !== 1000)) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", _this4.$message.error('查询用户信息失败！'));\n\n              case 6:\n                _this4.editForm = res.data;\n                _this4.editDialogVisible = true;\n\n              case 8:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["data","cb","queryInfo","query","pagenum","pagesize","userlist","total","addDialogVisible","addForm","username","password","email","addFormRules","required","message","trigger","min","max","validator","mobile","editDialogVisible","editForm","editFormRules","created","methods","getUserList","params","res","console","handleSizeChange","newSize","handleCurrentChange","newPage","userStateChanged","userinfo","addDialogClosed","addUser","valid","showEditDialog","id"],"sourceRoot":"src/views","sources":["MangerUser.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <!--面包屑导航区-->\r\n        <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n            <el-breadcrumb-item :to=\"{ path: '/' }\">首页</el-breadcrumb-item>\r\n            <el-breadcrumb-item>用户管理</el-breadcrumb-item>\r\n            <el-breadcrumb-item>用户列表</el-breadcrumb-item>\r\n        </el-breadcrumb>\r\n        <!--卡片视图-->\r\n        <el-card>\r\n            <!-- 搜索与添加区 -->\r\n            <el-row :gutter=\"20\">\r\n                <el-col :span=\"8\">\r\n                    <el-input placeholder=\"请输入内容\" v-model=\"queryInfo.query\" clearable @clear=\"getUserList\">\r\n                        <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"getUserList\"></el-button>\r\n                    </el-input>\r\n                </el-col>\r\n                <el-col :span=\"4\">\r\n                    <el-button type=\"primary\" @click=\"addDialogVisible = true\">添加用户</el-button>\r\n                </el-col>\r\n            </el-row>\r\n\r\n            <!-- 用户列表区 -->\r\n            <el-table :data=\"userlist\" :border='true' :stripe='true'>\r\n                <el-table-column type=\"index\"></el-table-column>\r\n                <el-table-column label=\"姓名\" prop=\"username\"></el-table-column>\r\n                <el-table-column label=\"密码\" prop=\"password\"></el-table-column>\r\n                <el-table-column label=\"邮箱\" prop=\"email\"></el-table-column>\r\n                <el-table-column label=\"电话\" prop=\"phone_number\"></el-table-column>\r\n                <el-table-column label=\"角色\" prop=\"identity\"></el-table-column>\r\n                <el-table-column label=\"状态\">\r\n                    <template slot-scope=\"scope\">\r\n                        <el-switch v-model=\"scope.row.mg_state\" @change=\"userStateChanged(scope.row)\"></el-switch>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column label=\"操作\" width=\"180px\">\r\n                    <template slot-scope=\"scope\">\r\n                        <!-- 修改按钮 -->\r\n                        <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" @click=\"showEditDialog(scope.row.id)\">\r\n                        </el-button>\r\n                        <!-- 删除按钮 -->\r\n                        <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\"></el-button>\r\n                        <!-- 分配角色按钮 -->\r\n                        <el-tooltip effect=\"dark\" content=\"分配角色\" placement=\"top\" :enterable=\"false\">\r\n                            <el-button type=\"warning\" icon=\"el-icon-setting\" size=\"mini\"></el-button>\r\n                        </el-tooltip>\r\n\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n\r\n            <!-- 分页区域 -->\r\n            <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\"\r\n                :current-page=\"queryInfo.pagenum\" :page-sizes=\"[1, 2, 5, 10]\" :page-size=\"queryInfo.pagesize\"\r\n                layout=\"total,sizes, prev, pager, next, jumper\" :total=\"total\">\r\n            </el-pagination>\r\n        </el-card>\r\n\r\n        <!-- 添加用户的对话框 -->\r\n        <el-dialog title=\"添加用户\" :visible.sync=\"addDialogVisible\" width=\"50%\" @close=\"addDialogClosed\">\r\n            <!--内容主题区-->\r\n            <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"70px\">\r\n                <el-form-item label=\"用户名\" prop=\"username\">\r\n                    <el-input v-model=\"addForm.username\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"密码\" prop=\"password\">\r\n                    <el-input v-model=\"addForm.password\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"邮箱\" prop=\"email\">\r\n                    <el-input v-model=\"addForm.email\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"手机号\" prop=\"mobile\">\r\n                    <el-input v-model=\"addForm.mobile\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <!--底部区域-->\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"addDialogVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"addUser\">确 定</el-button>\r\n            </span>\r\n        </el-dialog>\r\n\r\n        <!-- 修改用户的对话框 -->\r\n        <el-dialog title=\"修改用户\" :visible.sync=\"editDialogVisible\" width=\"50%\">\r\n            <el-form :model=\"editForm\" :rules=\"editFormRules\" ref=\"editFormRuleForm\" label-width=\"70px\">\r\n                <el-form-item label=\"用户名\">\r\n                    <el-input v-model=\"editForm.username\" disabled></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"邮箱\" prop=\"email\">\r\n                    <el-input v-model=\"editForm.email\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"手机号\" prop=\"phone_number\">\r\n                    <el-input v-model=\"editForm.phone_number\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"editDialogVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"editDialogVisible = false\">确 定</el-button>\r\n            </span>\r\n        </el-dialog>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        //验证邮箱的规则\r\n        var checkEmail = (rule, value, cb) => {\r\n            //验证邮箱的正则表达式 \r\n            const regEmail = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(\\.[a-zA-Z0-9_-])+/\r\n            if (regEmail.test(value)) {\r\n                //合法邮箱\r\n                return cb()\r\n            }\r\n\r\n            cb(new Error('请输入合法的邮箱'))\r\n\r\n        }\r\n\r\n        //验证手机号的规则\r\n        var checkMobile = (rule, value, cb) => {\r\n            //验证手机号的正则表达式\r\n            const regMobile = /^((13[0-9])|(17[0-1,6-8])|(15[^4,\\\\D])|(18[0-9]))\\d{8}$/\r\n            if (regMobile.test(value)) {\r\n                //合法手机号\r\n                return cb()\r\n            }\r\n\r\n            cb(new Error('请输入合法的手机号'))\r\n        }\r\n\r\n        return {\r\n            queryInfo: {\r\n                query: '',\r\n                //当前的页数\r\n                pagenum: 1,\r\n                //当前每页有多少条数据\r\n                pagesize: 2\r\n            },\r\n            userlist: [],\r\n            total: '',\r\n            //控制添加用户对话框的显示与隐藏\r\n            addDialogVisible: false,\r\n            //添加用户的表单数据\r\n            addForm: {\r\n                username: '',\r\n                password: '',\r\n                email: ''\r\n            },\r\n            //添加表单的验证规则对象\r\n            addFormRules: {\r\n                username: [\r\n                    { required: true, message: '请输入用户名', trigger: 'blur' },\r\n                    { min: 3, max: 10, message: '用户名的长度在3到10之间', trigger: 'blur' }\r\n                ],\r\n\r\n                password: [\r\n                    { required: true, message: '请输入密码', trigger: 'blur' },\r\n                    { min: 6, max: 15, message: '密码的长度在6到15之间', trigger: 'blur' }\r\n                ],\r\n\r\n                email: [\r\n                    { required: true, message: '请输入邮箱', trigger: 'blur' },\r\n                    { validator: checkEmail, trigger: 'blur' }\r\n                ],\r\n\r\n                mobile: [\r\n                    { required: true, message: '请输入手机号码', trigger: 'blur' },\r\n                    { validator: checkMobile, trigger: 'blur' }\r\n                ]\r\n\r\n            },\r\n\r\n            // 控制修改用户对话框的显示与隐藏\r\n            editDialogVisible: false,\r\n            // 查询到的用户信息对象\r\n            editForm: {},\r\n            //修改表单的验证规则\r\n            editFormRules: {\r\n                email: [\r\n                    { required: true, message: '请输入用户的邮箱', trigger: 'blur' },\r\n                    { validator: checkEmail, trigger: 'blur' }\r\n                ],\r\n\r\n                mobile: [\r\n                    { required: true, message: '请输入用户的手机号码', trigger: 'blur' },\r\n                    { validator: checkMobile, trigger: 'blur' }\r\n                ]\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n    },\r\n    created() {\r\n        this.getUserList()\r\n    },\r\n    methods: {\r\n        async getUserList() {\r\n            const { data: res } = await this.$http.get('getallmsg', {\r\n                params: this.queryInfo\r\n            })\r\n            if (res.code != 1000) {\r\n                return this.$message.error('获取用户列表失败！'); ``\r\n\r\n            }\r\n            this.userlist = res.data.list\r\n            // this.total = res.data.total\r\n            console.log(res)\r\n        },\r\n        // 监听pagesize\r\n        handleSizeChange(newSize) {\r\n\r\n            // console.log(newSize)\r\n            this.queryInfo.pagesize = newSize\r\n            this.getUserList()\r\n        },\r\n        //监听页码值改变的事件\r\n        handleCurrentChange(newPage) {\r\n            // console.log(newPage)\r\n            this.queryInfo.pagenum = newPage\r\n            this.getUserList()\r\n\r\n        },\r\n        //监听switch开关状态的改变\r\n        async userStateChanged(userinfo) {\r\n            console.log(userinfo)\r\n            const { data: res } = await this.$http.put(`users/${userinfo.id}/state/${userinfo.mg_state}`)\r\n            if (res.code !== 1000) {\r\n                userinfo.mg_state = !userinfo.mg_state\r\n                return this.$message.error(\"更新用户状态失败！\")\r\n            }\r\n            return this.$message.success(\"更新用户状态成功！\")\r\n\r\n        },\r\n\r\n        //监听添加用户对话框的关闭事件\r\n        addDialogClosed() {\r\n            this.$refs.addFormRef.resetFields()\r\n\r\n        },\r\n\r\n        //点击按钮，添加新用户\r\n        addUser() {\r\n            this.$refs.addFormRef.validate(async valid => {\r\n                // console.log(valid)\r\n                if (!valid) return\r\n                //可以发起添加用户的网络请求\r\n                const { data: res } = await this.$http.post('users', this.addForm)\r\n\r\n                if (res.code !== 1000) {\r\n                    this.$message.error('添加用户失败！')\r\n                }\r\n\r\n                this.$message.success('添加用户成功！')\r\n                this.addDialogVisible = false\r\n                this.getUserList()\r\n            })\r\n        },\r\n\r\n        //展示编辑的对话框\r\n        async showEditDialog(id) {\r\n        // console.log(id);\r\n        const { data: res } = await this.$http.get('users/' + id)\r\n\r\n        if (res.code !== 1000) {\r\n            return this.$message.error('查询用户信息失败！')\r\n        }\r\n\r\n        this.editForm = res.data\r\n        this.editDialogVisible = true\r\n\r\n    }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.el-card {\r\n    margin-top: 5px;\r\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.15) !important;\r\n}\r\n\r\n.e-table {\r\n\r\n    margin-top: 12px;\r\n    font-size: 15px;\r\n\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}